Arthur:
Last week I worked on familiarising myself with unreal engine by watching tutorials and videos.
We had to change our game engine to godot so after that I worked on familiarising myself on Godot.
for next week, we are going to discuss tomorrow the exact individual work but I will work more precisely on trying to implement a 2D user friendly interface.

Antoine:
This week I worked on better understanding unreal engine, and now instead familiarising with Godot.
More importantly with the object team we designed our basic inheritance tree for our main objects in our world.
I did this though a prezi presentation, which we then changed to using the Lucid app, building our inheritance tree there.
For next week I want to understand how Godot works and enter in more detail the structure of our inheritance objects.

Saga:
Last week, I worked on a class map with the objects team, so as to visualize the classes that we were going to need for our project, especially the attributes they would have and the inheritance.
I also tried to understand and download unreal engine until we decided to switch to Godot, so I watched tutorials on how to work on Godot.
Finally I started writing the classes, but next week I will need to separate each one of them in different files, so that our game can work on Godot.
So, next week I will continue working on the objects classes.

Paloma:
This week I organized with the objects' team the main classes we need for the simulation, with their attributes and some functions, in a lucid chart tree and coded them
in a file with the basic structure we have for now.
After working on Unreal Engine, I switched to understaning how Godot works especially to link the 3D interface with C++ code using Virtual Studio and DLLs.
Next week, I want to finish defining our classes and game structure with both the objects' and simulation team to start coding in detail the Structures branch, where each
class represented in the interface will have to be defined in a separate file.

Luca:
This week, I worked on finding the most suitable game engine for our project by following tutorials to familiarise myself with different engines in order to understand how they work.
With the interface team, we finally opted for Godot. Now, I try to make it possible every mac user to use visual code studio with Godot.
Next week, I plan to start coding in c++ with Godot in order to implement various actions for the user interface.

Eliott:
This week I started by creating the 2 first assets of our 3D world on blender and did a lot of research about game engines.
Then, I implemented them in unreal engine and started the 3D world. We found out that this game engine was too heavy for some laptops so we decided to try Godot.
I implemented by assets and set up everything to allow us writing only C++ and not GD native using DLL. I find a way to make a visual studio project able to compil
our code to a godot library on any win laptop. Moreover, I tested my first scripts by implementing the camera movement in the 3d world. Next week I need to find how
to compil the code on mac, create more assets on blender and implement building highlight and menus.

Ambroise:
I spent the week working with the interface team to explore the possibilities and potential of different game engines, in order to find the one that was best suited to our project.
After having a look at Qt engine and coding a simple game in two dimensions, it was clear that the Qt library was not sufficient and that implementing an entire three-dimensional city simulation would imply a considerable amount of work on the graphical side, compared to other options. 
We then opted for Unreal Engine, which had immense potential regarding functionality and offered a comprehensive interface to implement our graphical objects. I therefore started several test projects with the help of tutorials, for example to link user input and character actions or to create clickable objects.  
Unfortunately, the engine's requirements in terms of space and processing power made it impossible for the entire team to use it, and hence we chose to use the Godot game engine.
A much lighter engine, Godot presented one main challenge. Originally designed for its own scripting language, we had to work on making it C++ friendly by the means of CPP bindings and the use of DLL's. I then set up the project in Visual Studio (which we chose as our IDE to work with Godot) in such a way that all files, libraries and DLL's generated could be accessed with relative paths, thus allowing anyone to compile the code and run the Godot game without going through all the setup process.
In the coming week, I will focus on several specific tasks such as implementing clickable items, a time scale, and more sophisticated character movement in the Godot game.

Jerry:
This week I work on tutorials of Godot game engine, trying to understand the structure and the workflow. With the help of those tutorials, I managed to figure out an architechture of our project that everyone can work on together.
I also wrote a document about why and how we can change from Unreal to Godot.
Next week I will be working on (1) make sure our project works on mac (since we don't have visual studio on mac) (2) implementing interaction among obects created by object team. 